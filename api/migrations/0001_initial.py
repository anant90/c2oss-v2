# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-28 22:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email_address')),
                ('github_login', models.CharField(max_length=100, null=True)),
                ('avatar_url', models.TextField(null=True)),
                ('name', models.CharField(max_length=150, null=True)),
                ('bugs_count', models.IntegerField(default=0)),
                ('enhancements_count', models.IntegerField(default=0)),
                ('starred_repos_count', models.IntegerField(default=0)),
                ('owned_repos_count', models.IntegerField(default=0)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff_status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('html_url', models.TextField(null=True)),
                ('title', models.TextField(null=True)),
                ('number', models.IntegerField(null=True)),
                ('github_created_at', models.DateField(null=True, verbose_name='Created at')),
                ('comments_count', models.IntegerField(null=True)),
                ('isBug', models.BooleanField(default=False)),
                ('isEnhancement', models.BooleanField(default=False)),
                ('isAssigned', models.BooleanField(default=False)),
                ('assignee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issues_assigned', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issues_owned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Repo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('html_url', models.TextField(null=True)),
                ('full_name', models.CharField(max_length=100, null=True)),
                ('stargazers', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='repo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='api.Repo'),
        ),
    ]
